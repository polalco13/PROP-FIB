/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package capaPresentacio.views;

import capaDomini.excepcions.ExcepcioKenken;
import capaPresentacio.CtrlPresentacio;

import javax.swing.*;
import java.awt.*;
import java.io.File;

/**
 *
 * @author linhu
 */
public class jocPanel extends javax.swing.JPanel {

    private final CardLayout cardLayout;
    private final JPanel mainPanel;

    /**
     * Creates new form jocPanel
     */
    public jocPanel(CardLayout cardLayout, JPanel mainPanel) {
        this.cardLayout = cardLayout;
        this.mainPanel = mainPanel;
        initComponents();
        updateListKenkens();
        updateListJocs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        creaJocPanel = new javax.swing.JPanel();
        tabBox = new javax.swing.JTabbedPane();
        seleccionaTab = new javax.swing.JPanel();
        listKenkens = new java.awt.List();
        importaTab = new javax.swing.JPanel();
        jFileChooser1 = new javax.swing.JFileChooser();
        continuaPanel = new javax.swing.JPanel();
        listJocs = new java.awt.List();

        setBackground(new java.awt.Color(237, 224, 212));
        setLayout(new java.awt.GridLayout(2, 1));

        creaJocPanel.setBackground(new java.awt.Color(237, 224, 212));
        creaJocPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(111, 94, 83)), "Crear Joc", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(111, 94, 83))); // NOI18N
        creaJocPanel.setToolTipText("");
        creaJocPanel.setLayout(new java.awt.GridLayout(1, 0));

        tabBox.setBackground(new java.awt.Color(212, 199, 187));
        tabBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        seleccionaTab.setBackground(new java.awt.Color(237, 224, 212));
        seleccionaTab.setLayout(new javax.swing.BoxLayout(seleccionaTab, javax.swing.BoxLayout.PAGE_AXIS));

        listKenkens.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        listKenkens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listKenkensActionPerformed(evt);
            }
        });
        seleccionaTab.add(listKenkens);

        tabBox.addTab("Selecciona Kenken", seleccionaTab);

        importaTab.setLayout(new java.awt.GridLayout(1, 0));

        jFileChooser1.setMinimumSize(new java.awt.Dimension(0, 0));
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });
        importaTab.add(jFileChooser1);

        tabBox.addTab("Importa Kenken", importaTab);

        creaJocPanel.add(tabBox);

        add(creaJocPanel);

        continuaPanel.setBackground(new java.awt.Color(237, 224, 212));
        continuaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(111, 94, 83)), "Continuar joc", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(111, 94, 83))); // NOI18N
        continuaPanel.setLayout(new javax.swing.BoxLayout(continuaPanel, javax.swing.BoxLayout.PAGE_AXIS));

        listJocs.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        listJocs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listJocsActionPerformed(evt);
            }
        });
        continuaPanel.add(listJocs);

        add(continuaPanel);
    }// </editor-fold>//GEN-END:initComponents

    public void updateListKenkens() {
        listKenkens.removeAll(); // remove all items
        java.util.List<Integer> listkk = CtrlPresentacio.getKenkensGuardats(); // get updated items
        if (listkk == null) {
            return;
        }
        for (Integer i : listkk) {
            String name = CtrlPresentacio.getKenkenName(i);
            listKenkens.add("#" + i.toString() + " - " + name); // add updated items
        }
    }

    public static void updateListJocs() {
        listJocs.removeAll(); // remove all items
        java.util.List<Integer> listjoc = CtrlPresentacio.getJocsGuardats(); // get updated items
        if (listjoc == null) {
            return;
        }
        for (Integer i : listjoc) {
            String name = CtrlPresentacio.getKenkenNameFromGameId(i);
            listJocs.add("#" + i.toString() + " - " + name); // add updated items
        }
    }

    private void listKenkensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listKenkensActionPerformed
        //select kenken
        String selectedItem = listKenkens.getSelectedItem();
        if (selectedItem == null) {
            return;
        }
        String[] parts = selectedItem.split(" ");
        String itemUntilSpace = parts[0].trim();
        String kenkenId = itemUntilSpace.substring(1);

        //crea joc
        CtrlPresentacio.creaJoc(Integer.parseInt(kenkenId));

        //cambia pantalla
        mainPanel.add(new partidaPanel(cardLayout, mainPanel), "partidaCard");
        cardLayout.show(mainPanel, "partidaCard");
    }//GEN-LAST:event_listKenkensActionPerformed

    private void listJocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listJocsActionPerformed
        //select joc
        String selectedItem = listJocs.getSelectedItem();
        if (selectedItem == null) {
            return;
        }
        String[] parts = selectedItem.split(" ");
        String itemUntilSpace = parts[0].trim();
        String jocId = itemUntilSpace.substring(1);

        //crea joc
        CtrlPresentacio.continuaJoc(Integer.parseInt(jocId));

        //cambia pantalla
        mainPanel.add(new partidaPanel(cardLayout, mainPanel), "partidaCard");
        cardLayout.show(mainPanel, "partidaCard");
    }//GEN-LAST:event_listJocsActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        //select file
        File selectedFile = jFileChooser1.getSelectedFile();
        if (selectedFile != null) {
            try {
                CtrlPresentacio.importFile(selectedFile); //crea kenken
                updateListKenkens();
                tabBox.setSelectedComponent(seleccionaTab); //cambia pantalla
            } catch (ExcepcioKenken e) {
                throw new RuntimeException(e);
            }
        } else {}
    }//GEN-LAST:event_jFileChooser1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel continuaPanel;
    private javax.swing.JPanel creaJocPanel;
    private javax.swing.JPanel importaTab;
    private javax.swing.JFileChooser jFileChooser1;
    private static java.awt.List listJocs;
    private java.awt.List listKenkens;
    private javax.swing.JPanel seleccionaTab;
    private javax.swing.JTabbedPane tabBox;
    // End of variables declaration//GEN-END:variables
}
